// ==========================================================================
// This is auto-generated by gf cli tool. You may not really want to edit it.
// ==========================================================================

package pms_product

import (
	"database/sql"
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/os/gtime"
)

// Entity is the golang structure for table pms_product.
type Entity struct {
    Id                         int64       `orm:"id,primary"                    json:"id"`                            //                                                                                                          
    BrandId                    int64       `orm:"brand_id"                      json:"brand_id"`                      //                                                                                                          
    ProductCategoryId          int64       `orm:"product_category_id"           json:"product_category_id"`           //                                                                                                          
    FeightTemplateId           int64       `orm:"feight_template_id"            json:"feight_template_id"`            //                                                                                                          
    ProductAttributeCategoryId int64       `orm:"product_attribute_category_id" json:"product_attribute_category_id"` //                                                                                                          
    Name                       string      `orm:"name"                          json:"name"`                          //                                                                                                          
    Pic                        string      `orm:"pic"                           json:"pic"`                           //                                                                                                          
    ProductSn                  string      `orm:"product_sn"                    json:"product_sn"`                    // 货号                                                                                                     
    DeleteStatus               int         `orm:"delete_status"                 json:"delete_status"`                 // 删除状态：0->未删除；1->已删除                                                                           
    PublishStatus              int         `orm:"publish_status"                json:"publish_status"`                // 上架状态：0->下架；1->上架                                                                               
    NewStatus                  int         `orm:"new_status"                    json:"new_status"`                    // 新品状态:0->不是新品；1->新品                                                                            
    RecommandStatus            int         `orm:"recommand_status"              json:"recommand_status"`              // 推荐状态；0->不推荐；1->推荐                                                                             
    VerifyStatus               int         `orm:"verify_status"                 json:"verify_status"`                 // 审核状态：0->未审核；1->审核通过                                                                         
    Sort                       int         `orm:"sort"                          json:"sort"`                          // 排序                                                                                                     
    Sale                       int         `orm:"sale"                          json:"sale"`                          // 销量                                                                                                     
    Price                      float64     `orm:"price"                         json:"price"`                         //                                                                                                          
    PromotionPrice             float64     `orm:"promotion_price"               json:"promotion_price"`               // 促销价格                                                                                                 
    GiftGrowth                 int         `orm:"gift_growth"                   json:"gift_growth"`                   // 赠送的成长值                                                                                             
    GiftPoint                  int         `orm:"gift_point"                    json:"gift_point"`                    // 赠送的积分                                                                                               
    UsePointLimit              int         `orm:"use_point_limit"               json:"use_point_limit"`               // 限制使用的积分数                                                                                         
    SubTitle                   string      `orm:"sub_title"                     json:"sub_title"`                     // 副标题                                                                                                   
    Description                string      `orm:"description"                   json:"description"`                   // 商品描述                                                                                                 
    OriginalPrice              float64     `orm:"original_price"                json:"original_price"`                // 市场价                                                                                                   
    Stock                      int         `orm:"stock"                         json:"stock"`                         // 库存                                                                                                     
    LowStock                   int         `orm:"low_stock"                     json:"low_stock"`                     // 库存预警值                                                                                               
    Unit                       string      `orm:"unit"                          json:"unit"`                          // 单位                                                                                                     
    Weight                     float64     `orm:"weight"                        json:"weight"`                        // 商品重量，默认为克                                                                                       
    PreviewStatus              int         `orm:"preview_status"                json:"preview_status"`                // 是否为预告商品：0->不是；1->是                                                                           
    ServiceIds                 string      `orm:"service_ids"                   json:"service_ids"`                   // 以逗号分割的产品服务：1->无忧退货；2->快速退款；3->免费包邮                                              
    Keywords                   string      `orm:"keywords"                      json:"keywords"`                      //                                                                                                          
    Note                       string      `orm:"note"                          json:"note"`                          //                                                                                                          
    AlbumPics                  string      `orm:"album_pics"                    json:"album_pics"`                    // 画册图片，连产品图片限制为5张，以逗号分割                                                                
    DetailTitle                string      `orm:"detail_title"                  json:"detail_title"`                  //                                                                                                          
    DetailDesc                 string      `orm:"detail_desc"                   json:"detail_desc"`                   //                                                                                                          
    DetailHtml                 string      `orm:"detail_html"                   json:"detail_html"`                   // 产品详情网页内容                                                                                         
    DetailMobileHtml           string      `orm:"detail_mobile_html"            json:"detail_mobile_html"`            // 移动端网页详情                                                                                           
    PromotionStartTime         *gtime.Time `orm:"promotion_start_time"          json:"promotion_start_time"`          // 促销开始时间                                                                                             
    PromotionEndTime           *gtime.Time `orm:"promotion_end_time"            json:"promotion_end_time"`            // 促销结束时间                                                                                             
    PromotionPerLimit          int         `orm:"promotion_per_limit"           json:"promotion_per_limit"`           // 活动限购数量                                                                                             
    PromotionType              int         `orm:"promotion_type"                json:"promotion_type"`                // 促销类型：0->没有促销使用原价;1->使用促销价；2->使用会员价；3->使用阶梯价格；4->使用满减价格；5->限时购  
    BrandName                  string      `orm:"brand_name"                    json:"brand_name"`                    // 品牌名称                                                                                                 
    ProductCategoryName        string      `orm:"product_category_name"         json:"product_category_name"`         // 商品分类名称                                                                                             
}

// OmitEmpty sets OPTION_OMITEMPTY option for the model, which automatically filers
// the data and where attributes for empty values.
func (r *Entity) OmitEmpty() *arModel {
	return Model.Data(r).OmitEmpty()
}

// Inserts does "INSERT...INTO..." statement for inserting current object into table.
func (r *Entity) Insert() (result sql.Result, err error) {
	return Model.Data(r).Insert()
}

// InsertIgnore does "INSERT IGNORE INTO ..." statement for inserting current object into table.
func (r *Entity) InsertIgnore() (result sql.Result, err error) {
	return Model.Data(r).InsertIgnore()
}

// Replace does "REPLACE...INTO..." statement for inserting current object into table.
// If there's already another same record in the table (it checks using primary key or unique index),
// it deletes it and insert this one.
func (r *Entity) Replace() (result sql.Result, err error) {
	return Model.Data(r).Replace()
}

// Save does "INSERT...INTO..." statement for inserting/updating current object into table.
// It updates the record if there's already another same record in the table
// (it checks using primary key or unique index).
func (r *Entity) Save() (result sql.Result, err error) {
	return Model.Data(r).Save()
}

// Update does "UPDATE...WHERE..." statement for updating current object from table.
// It updates the record if there's already another same record in the table
// (it checks using primary key or unique index).
func (r *Entity) Update() (result sql.Result, err error) {
	return Model.Data(r).Where(gdb.GetWhereConditionOfStruct(r)).Update()
}

// Delete does "DELETE FROM...WHERE..." statement for deleting current object from table.
func (r *Entity) Delete() (result sql.Result, err error) {
	return Model.Where(gdb.GetWhereConditionOfStruct(r)).Delete()
}